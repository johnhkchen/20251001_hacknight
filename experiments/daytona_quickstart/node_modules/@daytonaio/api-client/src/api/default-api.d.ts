/**
 * Daytona
 * Daytona AI platform API Docs
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@daytona.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SandboxCreatedPostRequest } from '../models';
import type { SandboxStateUpdatedPostRequest } from '../models';
import type { SnapshotCreatedPostRequest } from '../models';
import type { SnapshotRemovedPostRequest } from '../models';
import type { SnapshotStateUpdatedPostRequest } from '../models';
import type { VolumeCreatedPostRequest } from '../models';
import type { VolumeStateUpdatedPostRequest } from '../models';
/**
 * DefaultApi - axios parameter creator
 * @export
 */
export declare const DefaultApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {SandboxCreatedPostRequest} [sandboxCreatedPostRequest] Sandbox created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxCreatedPost: (sandboxCreatedPostRequest?: SandboxCreatedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SandboxStateUpdatedPostRequest} [sandboxStateUpdatedPostRequest] Sandbox state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxStateUpdatedPost: (sandboxStateUpdatedPostRequest?: SandboxStateUpdatedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SnapshotCreatedPostRequest} [snapshotCreatedPostRequest] Snapshot created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotCreatedPost: (snapshotCreatedPostRequest?: SnapshotCreatedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SnapshotRemovedPostRequest} [snapshotRemovedPostRequest] Snapshot removed event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotRemovedPost: (snapshotRemovedPostRequest?: SnapshotRemovedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SnapshotStateUpdatedPostRequest} [snapshotStateUpdatedPostRequest] Snapshot state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotStateUpdatedPost: (snapshotStateUpdatedPostRequest?: SnapshotStateUpdatedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {VolumeCreatedPostRequest} [volumeCreatedPostRequest] Volume created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    volumeCreatedPost: (volumeCreatedPostRequest?: VolumeCreatedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {VolumeStateUpdatedPostRequest} [volumeStateUpdatedPostRequest] Volume state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    volumeStateUpdatedPost: (volumeStateUpdatedPostRequest?: VolumeStateUpdatedPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DefaultApi - functional programming interface
 * @export
 */
export declare const DefaultApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {SandboxCreatedPostRequest} [sandboxCreatedPostRequest] Sandbox created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxCreatedPost(sandboxCreatedPostRequest?: SandboxCreatedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SandboxStateUpdatedPostRequest} [sandboxStateUpdatedPostRequest] Sandbox state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxStateUpdatedPost(sandboxStateUpdatedPostRequest?: SandboxStateUpdatedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SnapshotCreatedPostRequest} [snapshotCreatedPostRequest] Snapshot created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotCreatedPost(snapshotCreatedPostRequest?: SnapshotCreatedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SnapshotRemovedPostRequest} [snapshotRemovedPostRequest] Snapshot removed event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotRemovedPost(snapshotRemovedPostRequest?: SnapshotRemovedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SnapshotStateUpdatedPostRequest} [snapshotStateUpdatedPostRequest] Snapshot state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotStateUpdatedPost(snapshotStateUpdatedPostRequest?: SnapshotStateUpdatedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VolumeCreatedPostRequest} [volumeCreatedPostRequest] Volume created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    volumeCreatedPost(volumeCreatedPostRequest?: VolumeCreatedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VolumeStateUpdatedPostRequest} [volumeStateUpdatedPostRequest] Volume state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    volumeStateUpdatedPost(volumeStateUpdatedPostRequest?: VolumeStateUpdatedPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * DefaultApi - factory interface
 * @export
 */
export declare const DefaultApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {SandboxCreatedPostRequest} [sandboxCreatedPostRequest] Sandbox created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxCreatedPost(sandboxCreatedPostRequest?: SandboxCreatedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SandboxStateUpdatedPostRequest} [sandboxStateUpdatedPostRequest] Sandbox state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxStateUpdatedPost(sandboxStateUpdatedPostRequest?: SandboxStateUpdatedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SnapshotCreatedPostRequest} [snapshotCreatedPostRequest] Snapshot created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotCreatedPost(snapshotCreatedPostRequest?: SnapshotCreatedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SnapshotRemovedPostRequest} [snapshotRemovedPostRequest] Snapshot removed event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotRemovedPost(snapshotRemovedPostRequest?: SnapshotRemovedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SnapshotStateUpdatedPostRequest} [snapshotStateUpdatedPostRequest] Snapshot state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    snapshotStateUpdatedPost(snapshotStateUpdatedPostRequest?: SnapshotStateUpdatedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {VolumeCreatedPostRequest} [volumeCreatedPostRequest] Volume created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    volumeCreatedPost(volumeCreatedPostRequest?: VolumeCreatedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {VolumeStateUpdatedPostRequest} [volumeStateUpdatedPostRequest] Volume state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    volumeStateUpdatedPost(volumeStateUpdatedPostRequest?: VolumeStateUpdatedPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export declare class DefaultApi extends BaseAPI {
    /**
     *
     * @param {SandboxCreatedPostRequest} [sandboxCreatedPostRequest] Sandbox created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    sandboxCreatedPost(sandboxCreatedPostRequest?: SandboxCreatedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
    /**
     *
     * @param {SandboxStateUpdatedPostRequest} [sandboxStateUpdatedPostRequest] Sandbox state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    sandboxStateUpdatedPost(sandboxStateUpdatedPostRequest?: SandboxStateUpdatedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
    /**
     *
     * @param {SnapshotCreatedPostRequest} [snapshotCreatedPostRequest] Snapshot created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    snapshotCreatedPost(snapshotCreatedPostRequest?: SnapshotCreatedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
    /**
     *
     * @param {SnapshotRemovedPostRequest} [snapshotRemovedPostRequest] Snapshot removed event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    snapshotRemovedPost(snapshotRemovedPostRequest?: SnapshotRemovedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
    /**
     *
     * @param {SnapshotStateUpdatedPostRequest} [snapshotStateUpdatedPostRequest] Snapshot state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    snapshotStateUpdatedPost(snapshotStateUpdatedPostRequest?: SnapshotStateUpdatedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
    /**
     *
     * @param {VolumeCreatedPostRequest} [volumeCreatedPostRequest] Volume created event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    volumeCreatedPost(volumeCreatedPostRequest?: VolumeCreatedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
    /**
     *
     * @param {VolumeStateUpdatedPostRequest} [volumeStateUpdatedPostRequest] Volume state updated event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    volumeStateUpdatedPost(volumeStateUpdatedPostRequest?: VolumeStateUpdatedPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any, {}>>;
}
