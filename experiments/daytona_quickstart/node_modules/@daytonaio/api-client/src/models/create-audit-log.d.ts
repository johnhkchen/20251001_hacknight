/**
 * Daytona
 * Daytona AI platform API Docs
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@daytona.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateAuditLog
 */
export interface CreateAuditLog {
    /**
     *
     * @type {string}
     * @memberof CreateAuditLog
     */
    actorId: string;
    /**
     *
     * @type {string}
     * @memberof CreateAuditLog
     */
    actorEmail: string;
    /**
     *
     * @type {string}
     * @memberof CreateAuditLog
     */
    organizationId?: string;
    /**
     *
     * @type {string}
     * @memberof CreateAuditLog
     */
    action: CreateAuditLogActionEnum;
    /**
     *
     * @type {string}
     * @memberof CreateAuditLog
     */
    targetType?: CreateAuditLogTargetTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateAuditLog
     */
    targetId?: string;
}
export declare const CreateAuditLogActionEnum: {
    readonly CREATE: "create";
    readonly READ: "read";
    readonly UPDATE: "update";
    readonly DELETE: "delete";
    readonly LOGIN: "login";
    readonly SET_DEFAULT: "set_default";
    readonly UPDATE_ACCESS: "update_access";
    readonly UPDATE_QUOTA: "update_quota";
    readonly SUSPEND: "suspend";
    readonly UNSUSPEND: "unsuspend";
    readonly ACCEPT: "accept";
    readonly DECLINE: "decline";
    readonly LINK_ACCOUNT: "link_account";
    readonly UNLINK_ACCOUNT: "unlink_account";
    readonly LEAVE_ORGANIZATION: "leave_organization";
    readonly REGENERATE_KEY_PAIR: "regenerate_key_pair";
    readonly UPDATE_SCHEDULING: "update_scheduling";
    readonly START: "start";
    readonly STOP: "stop";
    readonly REPLACE_LABELS: "replace_labels";
    readonly CREATE_BACKUP: "create_backup";
    readonly UPDATE_PUBLIC_STATUS: "update_public_status";
    readonly SET_AUTO_STOP_INTERVAL: "set_auto_stop_interval";
    readonly SET_AUTO_ARCHIVE_INTERVAL: "set_auto_archive_interval";
    readonly SET_AUTO_DELETE_INTERVAL: "set_auto_delete_interval";
    readonly ARCHIVE: "archive";
    readonly GET_PORT_PREVIEW_URL: "get_port_preview_url";
    readonly SET_GENERAL_STATUS: "set_general_status";
    readonly ACTIVATE: "activate";
    readonly DEACTIVATE: "deactivate";
    readonly UPDATE_NETWORK_SETTINGS: "update_network_settings";
    readonly GET_WEBHOOK_APP_PORTAL_ACCESS: "get_webhook_app_portal_access";
    readonly SEND_WEBHOOK_MESSAGE: "send_webhook_message";
    readonly INITIALIZE_WEBHOOKS: "initialize_webhooks";
    readonly UPDATE_SANDBOX_DEFAULT_LIMITED_NETWORK_EGRESS: "update_sandbox_default_limited_network_egress";
    readonly TOOLBOX_DELETE_FILE: "toolbox_delete_file";
    readonly TOOLBOX_DOWNLOAD_FILE: "toolbox_download_file";
    readonly TOOLBOX_CREATE_FOLDER: "toolbox_create_folder";
    readonly TOOLBOX_MOVE_FILE: "toolbox_move_file";
    readonly TOOLBOX_SET_FILE_PERMISSIONS: "toolbox_set_file_permissions";
    readonly TOOLBOX_REPLACE_IN_FILES: "toolbox_replace_in_files";
    readonly TOOLBOX_UPLOAD_FILE: "toolbox_upload_file";
    readonly TOOLBOX_BULK_UPLOAD_FILES: "toolbox_bulk_upload_files";
    readonly TOOLBOX_GIT_ADD_FILES: "toolbox_git_add_files";
    readonly TOOLBOX_GIT_CREATE_BRANCH: "toolbox_git_create_branch";
    readonly TOOLBOX_GIT_DELETE_BRANCH: "toolbox_git_delete_branch";
    readonly TOOLBOX_GIT_CLONE_REPOSITORY: "toolbox_git_clone_repository";
    readonly TOOLBOX_GIT_COMMIT_CHANGES: "toolbox_git_commit_changes";
    readonly TOOLBOX_GIT_PULL_CHANGES: "toolbox_git_pull_changes";
    readonly TOOLBOX_GIT_PUSH_CHANGES: "toolbox_git_push_changes";
    readonly TOOLBOX_GIT_CHECKOUT_BRANCH: "toolbox_git_checkout_branch";
    readonly TOOLBOX_EXECUTE_COMMAND: "toolbox_execute_command";
    readonly TOOLBOX_CREATE_SESSION: "toolbox_create_session";
    readonly TOOLBOX_SESSION_EXECUTE_COMMAND: "toolbox_session_execute_command";
    readonly TOOLBOX_DELETE_SESSION: "toolbox_delete_session";
    readonly TOOLBOX_COMPUTER_USE_START: "toolbox_computer_use_start";
    readonly TOOLBOX_COMPUTER_USE_STOP: "toolbox_computer_use_stop";
    readonly TOOLBOX_COMPUTER_USE_RESTART_PROCESS: "toolbox_computer_use_restart_process";
};
export type CreateAuditLogActionEnum = (typeof CreateAuditLogActionEnum)[keyof typeof CreateAuditLogActionEnum];
export declare const CreateAuditLogTargetTypeEnum: {
    readonly API_KEY: "api_key";
    readonly ORGANIZATION: "organization";
    readonly ORGANIZATION_INVITATION: "organization_invitation";
    readonly ORGANIZATION_ROLE: "organization_role";
    readonly ORGANIZATION_USER: "organization_user";
    readonly DOCKER_REGISTRY: "docker_registry";
    readonly RUNNER: "runner";
    readonly SANDBOX: "sandbox";
    readonly SNAPSHOT: "snapshot";
    readonly USER: "user";
    readonly VOLUME: "volume";
};
export type CreateAuditLogTargetTypeEnum = (typeof CreateAuditLogTargetTypeEnum)[keyof typeof CreateAuditLogTargetTypeEnum];
